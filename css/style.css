:root {
    --primary-color: pink;
    --secondary-color: #3498db;
    --accent-color: #f1c40f;
    --text-color: #2c3e50;
    --background-color: #ecf0f1;
    --white: #ffffff;
    --black: #000000;
}
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Noto Serif SC', serif;
    line-height: 1.8;
    color: var(--text-color);
    background-color: var(--background-color);
    overflow-x: hidden;
}

/* 光标效果 */
.custom-cursor {
    width: 20px;
    height: 20px;
    border: 2px solid var(--primary-color);
    border-radius: 50%;
    position: fixed;
    pointer-events: none;
    z-index: 9999;
    transition:  all 0.1s ease;
    transform: translate(-50%, -50%);
}
.cursor-dot {
    width: 5px;
    height: 5px;
    background-color: var(--primary-color);
    border-radius: 50%;
    position: fixed;
    pointer-events: none;
    z-index: 9999;
    transition:  all 0.1s ease;
    transform: translate(-50%, -50%);
}
/* 玫瑰花掉落特效 */
.rose {
    position: fixed;
    top: -1vh;
    font-size: 1.5rem;
    color: var(--primary-color);
    pointer-events: none;
    animation: fall 3s linear forwards;
}
@keyframes fall {
    to {
        transform: translateY(105vh) rotate(360deg);
    }
}

header {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    z-index: 1000;
    transition: all 0.5s ease;
}
/* 页面滚动头部显示 */
header.scrolled {
    background-color: rgba(255, 255, 255, 0.95);
    box-shadow: 0 2px 20px rgba(0, 0, 0, 0.1);
}
nav {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1rem 5%;
}
.logo {
    font-family: 'Ma Shan Zheng', cursive;
    font-size: 2rem;
    color: var(--primary-color);
    text-decoration: none;
    transition: all 0.3s ease;
}
.logo:hover {
    transform: scale(1.2);
    text-shadow: 0 0 10px rgba(231, 76, 60, 0.5);
}
.nav-links {
    display: flex;
    list-style: none;
}
.nav-links li {
    margin-left: 2rem;
}
.nav-links a {
    text-decoration: none;
    color: var(--primary-color);
    font-weight: 500;
    transition: all 0.3s ease;
    position: relative;
}
.nav-links a::after {
    content: '';
    width: 0;
    height: 2px;
    position: absolute;
    left: 0;
    bottom: -5px;
    background-color: var(--primary-color);
    transition: all 0.3s ease;
}
.nav-links a:hover::after {
    width: 100%;
}

/* 移动端适配 */
@media screen and (max-width: 768px) { 
    header {
        transform: translateY(-100%);
    }
    .hero h1 {
        font-size: 2rem !important;
    }
    .gallery-grid {
        display: grid; /*元素使用网格布局 */
        grid-template-columns: 50% 50% !important;
        gap: 0.5rem; /*网格间隙*/
    }
}

.hero {
    height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    background: url('../images/bg.png') no-repeat center center;
    background-size: contain;
    color: var(--white);
    text-align: center;
    position: relative;
    overflow: hidden;
}
.hero::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.5);
    z-index: 1;
}
.hero-content {
    max-width: 800px;
    padding: 2rem;
    position: relative;
    z-index: 2;
}
.hero h1 {
    font-size: 4rem;
    margin-bottom: 1rem;
    font-family: 'ZCOOL XiaoWei', serif;
    animation: fadeInUp 1s ease-out;
}

.hero p {
    font-size: 1.2rem;
    margin-bottom: 2rem;
    animation: fadeInUp 1s ease-out 0.5s both;
}

@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.btn {
    display: inline-block;
    padding: 1rem 2rem;
    background-color: var(--primary-color);
    color: var(--white);
    text-decoration: none;
    border-radius: 50px;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
    z-index: 1;
}

.btn:hover {
    transform: translateY(-3px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
}

.parallax {
    background-attachment: fixed;
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
}

.fade-in { 
    animation: fadeIn 1s ease-out; 
}
@keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
}

.slide-in-left {
     animation: slideInLeft 1s ease-out;
}
@keyframes slideInLeft {
    from { transform: translateX(-100%); }
    to { transform: translateX(0); }
}

.slide-in-right { 
    animation: slideInRight 1s ease-out; 
}
@keyframes slideInRight {
    from { transform: translateX(100%); }
    to { transform: translateX(0); }
}

.zoom-in { 
    animation: zoomIn 1s ease-out;
}
@keyframes zoomIn {
    from { transform: scale(0); }
    to { transform: scale(1); }
}

.bounce {
     animation: bounce 2s infinite; 
}
@keyframes bounce {
    0%, 20%, 50%, 80%, 100% { transform: translateY(0); }
    40% { transform: translateY(-30px); }
    60% { transform: translateY(-15px); }
}

.container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
}
.story-section, .gallery-section, .video-section {
    padding: 5rem 0;
    background-color: var(--white);
}

.story-grid {
    display: grid; /*元素使用网格布局 */
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); /*创建尽可能多的列，每列的最小宽度为300px，并且所有列将均匀地分配容器的剩余宽度（如果有的话）。如果容器的宽度不足以容纳另一列（即使是最小宽度300px），那么就不会创建新的列。*/
    gap: 2rem; /*网格间隙*/
}

.story-item {
    background-color: var(--background-color);
    border-radius: 10px;
    overflow: hidden;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
}

.story-item:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
}

.story-image {
    width: 100%;
    height: 200px;
    object-fit: cover;
}

.story-content {
    padding: 1.5rem;
}

.story-title {
    font-size: 1.5rem;
    margin-bottom: 1rem;
    color: var(--primary-color);
}


.reveal {
    position: relative;
    opacity: 0;
    transition: all 1s ease-in-out;
}

.reveal.active {
    opacity: 1;
}

.reveal.fade-bottom { 
    transform: translateY(50px); 
}
.reveal.fade-left { 
    transform: translateX(-50px); 
}
.reveal.fade-right { 
    transform: translateX(50px); 
}

.reveal.active.fade-bottom,
.reveal.active.fade-left,
.reveal.active.fade-right {
    transform: translateY(0);
    transform: translateX(0);
}



.gallery-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 1rem;
}
.gallery-item {
    position: relative;
    overflow: hidden;
    border-radius: 10px;
    cursor: pointer;
}
.gallery-item img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: all 0.3s ease;
}
.gallery-item:hover img {
    transform: scale(1.1);
}
.gallery-caption {
    position: absolute;
    left: 0;
    bottom: 0;
    right: 0;
    padding: 1rem;
    background-color: rgba(0, 0, 0, 0.7);
    color: var(--white);
    transform: translateY(100%);
    transition: all 0.3s ease;
}
/*文字上移出现*/
.gallery-item:hover .gallery-caption {
    transform: translateY(0);
}


.video-container {
    position: relative;
    width: 100%;
    padding-bottom: 56.25%; /* 16:9 Aspect Ratio */
}

.video-container video {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
}



.timeline-section {
    padding: 5rem 0;
    background-color: var(--background-color);
    position: relative;
}
.timeline::after {
    content: '';
    width: 6px;
    position: absolute;
    top: 0;
    bottom: 0;
    left: 50%;
    background-color: var(--primary-color);
    margin-left: -3px;
}
.timeline {
    position: relative;
    max-width: 1200px;
    margin: 0 auto;
}
.timeline-item {
    padding: 10px 40px;
    position: relative;
    background-color: inherit;
    width: 50%;
}
.timeline-item::after {
    content: '';
    position: absolute;
    width: 25px;
    height: 25px;
    right: -17px;
    background-color: var(--white);
    border: 4px solid var(--primary-color);
    top: 15px;
    border-radius: 50%;
    z-index: 1;
}
.left {
    left: 0;
}
.right {
    left: 50%;
}
.right::after {
    left: -16px;
}
.timeline-content {
    padding: 20px 30px;
    background-color: var(--white);
    position: relative;
    border-radius: 6px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}








